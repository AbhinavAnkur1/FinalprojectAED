/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MainUserInterface.Doctor;

import BusinessModel.Ecosystem;
import BusinessModel.Patient.PatientBills;
import BusinessModel.Patient.Patient;
import BusinessModel.UserAccount.User;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mayurchaudhari
 */
public class DocVisit extends javax.swing.JPanel {

    /**
     * Creates new form DocVisit
     */
    private JPanel userProcessContainer;
    private Ecosystem ecoSystem;
    private User userAccount;
    private Patient patient;

    public DocVisit(JPanel userProcessContainer, User account, Ecosystem ecoSystem, Patient patient) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecoSystem = ecoSystem;
        this.userAccount = account;
        this.patient = patient;
        populateBillTable();
    }

    private void populateBillTable() {
        DefaultTableModel model = (DefaultTableModel) BillTable.getModel();

        model.setRowCount(0);

        for (PatientBills b : patient.getpBills()) {

            Object[] row = new Object[7];
            row[0] = b.getName();
            row[1] = b.getOrgType();
            row[2] = b.getAmount();
            row[3] = b.getStatus();
            row[4] = b.getResult();
            
            model.addRow(row);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        BillTable = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        reqLabTestsBtn = new javax.swing.JButton();
        reqMedBtn = new javax.swing.JButton();
        reqBloodBtn = new javax.swing.JButton();
        dischargeReadyBtn = new javax.swing.JButton();
        endVisitBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 102, 102));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BillTable.setBackground(new java.awt.Color(204, 255, 204));
        BillTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, java.awt.Color.gray));
        BillTable.setFont(new java.awt.Font("Futura", 1, 14)); // NOI18N
        BillTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Item Name", "Organization", "Amount", "Status", "Result"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(BillTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 1420, 191));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 126, 1402, 10));

        jLabel1.setBackground(new java.awt.Color(0, 153, 204));
        jLabel1.setFont(new java.awt.Font("Futura", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Patient History");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 50, 280, 50));

        reqLabTestsBtn.setBackground(new java.awt.Color(204, 255, 204));
        reqLabTestsBtn.setFont(new java.awt.Font("Futura", 1, 18)); // NOI18N
        reqLabTestsBtn.setForeground(new java.awt.Color(0, 102, 102));
        reqLabTestsBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainUserInterface/Images/lab.png"))); // NOI18N
        reqLabTestsBtn.setText("Request Lab Tests");
        reqLabTestsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reqLabTestsBtnActionPerformed(evt);
            }
        });
        add(reqLabTestsBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, 250, 60));

        reqMedBtn.setBackground(new java.awt.Color(204, 255, 204));
        reqMedBtn.setFont(new java.awt.Font("Futura", 1, 18)); // NOI18N
        reqMedBtn.setForeground(new java.awt.Color(0, 102, 102));
        reqMedBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainUserInterface/Images/medicine.png"))); // NOI18N
        reqMedBtn.setText("Request Medicines");
        reqMedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reqMedBtnActionPerformed(evt);
            }
        });
        add(reqMedBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 370, 250, 60));

        reqBloodBtn.setBackground(new java.awt.Color(204, 255, 204));
        reqBloodBtn.setFont(new java.awt.Font("Futura", 1, 18)); // NOI18N
        reqBloodBtn.setForeground(new java.awt.Color(0, 102, 102));
        reqBloodBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainUserInterface/Images/blood-test.png"))); // NOI18N
        reqBloodBtn.setText("Request Blood");
        reqBloodBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reqBloodBtnActionPerformed(evt);
            }
        });
        add(reqBloodBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 370, 230, 60));

        dischargeReadyBtn.setFont(new java.awt.Font("Futura", 0, 18)); // NOI18N
        dischargeReadyBtn.setForeground(new java.awt.Color(255, 0, 0));
        dischargeReadyBtn.setText("Ready to Discharge");
        dischargeReadyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dischargeReadyBtnActionPerformed(evt);
            }
        });
        add(dischargeReadyBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 380, 220, 50));

        endVisitBtn.setBackground(new java.awt.Color(255, 0, 0));
        endVisitBtn.setFont(new java.awt.Font("Futura", 0, 18)); // NOI18N
        endVisitBtn.setForeground(new java.awt.Color(255, 255, 255));
        endVisitBtn.setText("End Visit");
        endVisitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endVisitBtnActionPerformed(evt);
            }
        });
        add(endVisitBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 380, 120, 50));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainUserInterface/Images/phistory.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 50, 50, 50));
    }// </editor-fold>//GEN-END:initComponents

    private void reqLabTestsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reqLabTestsBtnActionPerformed
        // TODO add your handling code here:

        DocLabTestRequest doctorRequestLabTestJPanel = new DocLabTestRequest(userProcessContainer, userAccount, ecoSystem, patient);
        userProcessContainer.add("Request Lab Tests", doctorRequestLabTestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_reqLabTestsBtnActionPerformed

    private void reqMedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reqMedBtnActionPerformed
        // TODO add your handling code here:

        DocMedicineRequest doctorRequestMedicineJPanel = new DocMedicineRequest(userProcessContainer, userAccount, ecoSystem, patient);
        userProcessContainer.add("Request  Medicine", doctorRequestMedicineJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_reqMedBtnActionPerformed

    private void reqBloodBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reqBloodBtnActionPerformed
        // TODO add your handling code here:

        DocBloodRequest doctorRequestBloodJPanel = new DocBloodRequest(userProcessContainer, userAccount, ecoSystem, patient);
        userProcessContainer.add("Request Blood", doctorRequestBloodJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_reqBloodBtnActionPerformed

    private void dischargeReadyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dischargeReadyBtnActionPerformed
        // TODO add your handling code here:
        patient.setpStatus("Ready to Discharge");
        DoctorWorkArea doctor = new DoctorWorkArea(userProcessContainer,userAccount,ecoSystem);
        userProcessContainer.add("Request Blood", doctor);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_dischargeReadyBtnActionPerformed

    private void endVisitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endVisitBtnActionPerformed
        // TODO add your handling code here:
        patient.setpStatus("Under Observation");
        DoctorWorkArea doctor = new DoctorWorkArea(userProcessContainer,userAccount,ecoSystem);
        userProcessContainer.add("Request Blood", doctor);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_endVisitBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BillTable;
    private javax.swing.JButton dischargeReadyBtn;
    private javax.swing.JButton endVisitBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton reqBloodBtn;
    private javax.swing.JButton reqLabTestsBtn;
    private javax.swing.JButton reqMedBtn;
    // End of variables declaration//GEN-END:variables
}
