/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package MainUserInterface.BloodBank;

import BusinessModel.BBank.BBank;
import BusinessModel.Ecosystem;
import BusinessModel.Patient.PatientBills;
import BusinessModel.Patient.Patient;
import BusinessModel.UserAccount.User;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author daddy
 */
public class BloodBankWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form LabWorkAreaJPanel
     */
    private final JPanel userProCont;
    private final Ecosystem ecoSystem;
    User userAcc;
    BBank bbank;
    Patient patientBill;

    public BloodBankWorkAreaJPanel(JPanel userProcessContainer, User account, Ecosystem system) {
        initComponents();
        this.userProCont = userProcessContainer;
        this.ecoSystem = system;
        this.userAcc = account;
        this.patientBill = null;
        bloodRequestStatusDropDown.addItem("Select Status");
        bloodRequestStatusDropDown.addItem("Blood Delivered");
        bloodRequestStatusDropDown.addItem("Unavailable");
        populateManagePatientTable();
    }

    private void populateManagePatientBillsTable() {
        DefaultTableModel model = (DefaultTableModel) managePatientBillsTable.getModel();

        model.setRowCount(0);

        for (PatientBills b : patientBill.getpBills()) {
            
                Object[] row = new Object[4];
                row[0] = b.getName();
                row[1] = b.getOrgType();
                row[2] = b.getAmount();
                row[3] = b;
                if(b.getOrgType().toLowerCase().equals("blood bank"))
                {
                    model.addRow(row);
                }
        }
    }

    private void populateManagePatientTable() {
        DefaultTableModel model = (DefaultTableModel) ManagePatientTable.getModel();

        model.setRowCount(0);

        for (Patient patient : ecoSystem.getPatientDirect().getPatientList()) {
            if (patient.getpBloodBankStatus().equals("Requested") || patient.getpBloodBankStatus().equals("Unavailable")) {
                Object[] row = new Object[10];
                row[0] = patient.getpFirstName();
                row[1] = patient.getpHealthInsuranceID();
                row[2] = patient.getpUserName();
                row[3] = patient.getpLastName();
                row[4] = patient.getpAge();
                row[5] = patient.getpInsuranceStatus();
                row[6] = patient.getpEmailAddress();
                row[7] = patient.getpBloodBankStatus();
                row[8] = patient.getpBloodBagQuantity();
                row[9] = patient;
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPatientBill = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ManagePatientTable = new javax.swing.JTable();
        bloodBankInfoBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        managePatientBillsTable = new javax.swing.JTable();
        lblCommunity = new javax.swing.JLabel();
        bloodRequestStatusDropDown = new javax.swing.JComboBox<>();
        processReqBtn = new javax.swing.JButton();
        showTreatedPatListBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(242, 198, 105));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblPatientBill.setBackground(new java.awt.Color(255, 255, 255));
        lblPatientBill.setFont(new java.awt.Font("Georgia", 1, 36)); // NOI18N
        lblPatientBill.setForeground(new java.awt.Color(255, 255, 255));
        lblPatientBill.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPatientBill.setText("BILLS");
        add(lblPatientBill, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 330, 160, 83));

        ManagePatientTable.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        ManagePatientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "User Name", "HealthId", "First", "Last", "Age", "Address", "Email", "Request Status", "Blood Quantity", "obj"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(ManagePatientTable);
        if (ManagePatientTable.getColumnModel().getColumnCount() > 0) {
            ManagePatientTable.getColumnModel().getColumn(9).setMinWidth(0);
            ManagePatientTable.getColumnModel().getColumn(9).setPreferredWidth(0);
            ManagePatientTable.getColumnModel().getColumn(9).setMaxWidth(0);
        }

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 140, 860, 191));

        bloodBankInfoBtn.setBackground(new java.awt.Color(0, 0, 204));
        bloodBankInfoBtn.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        bloodBankInfoBtn.setForeground(new java.awt.Color(255, 255, 255));
        bloodBankInfoBtn.setText("Blood Bank Information");
        bloodBankInfoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloodBankInfoBtnActionPerformed(evt);
            }
        });
        add(bloodBankInfoBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 600, -1, 30));

        managePatientBillsTable.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        managePatientBillsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Item Name", "Organization", "Amount", "obj"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(managePatientBillsTable);
        if (managePatientBillsTable.getColumnModel().getColumnCount() > 0) {
            managePatientBillsTable.getColumnModel().getColumn(3).setMinWidth(0);
            managePatientBillsTable.getColumnModel().getColumn(3).setPreferredWidth(0);
            managePatientBillsTable.getColumnModel().getColumn(3).setMaxWidth(0);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 400, 860, 191));

        lblCommunity.setBackground(new java.awt.Color(255, 255, 255));
        lblCommunity.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        lblCommunity.setForeground(new java.awt.Color(255, 255, 255));
        lblCommunity.setText("Blood Request Status");
        add(lblCommunity, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, 30));

        bloodRequestStatusDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloodRequestStatusDropDownActionPerformed(evt);
            }
        });
        add(bloodRequestStatusDropDown, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 140, 162, 30));

        processReqBtn.setBackground(new java.awt.Color(0, 0, 204));
        processReqBtn.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        processReqBtn.setForeground(new java.awt.Color(255, 255, 255));
        processReqBtn.setText("Process Request");
        processReqBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processReqBtnActionPerformed(evt);
            }
        });
        add(processReqBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 180, -1, 30));

        showTreatedPatListBtn.setBackground(new java.awt.Color(0, 0, 204));
        showTreatedPatListBtn.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        showTreatedPatListBtn.setForeground(new java.awt.Color(255, 255, 255));
        showTreatedPatListBtn.setText("Show Treated Patient List");
        showTreatedPatListBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showTreatedPatListBtnActionPerformed(evt);
            }
        });
        add(showTreatedPatListBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 600, 200, 30));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Georgia", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("BLOOD BANK");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 20, 300, 80));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainUserInterface/Images/icons8-drop-of-blood-48.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 30, 80, 60));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainUserInterface/Images/hospital bills.png"))); // NOI18N
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(-210, 310, 700, 400));
    }// </editor-fold>//GEN-END:initComponents

    private void bloodBankInfoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloodBankInfoBtnActionPerformed
        // TODO add your handling code here:
        BloodBankInfoJPanel bloodBankInfoJPanel = new BloodBankInfoJPanel(userProCont, userAcc, ecoSystem);
        userProCont.add("Blood Bank Information", bloodBankInfoJPanel);
        CardLayout layout = (CardLayout) userProCont.getLayout();
        layout.next(userProCont);

    }//GEN-LAST:event_bloodBankInfoBtnActionPerformed

    private void bloodRequestStatusDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloodRequestStatusDropDownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bloodRequestStatusDropDownActionPerformed

    private void processReqBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processReqBtnActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = ManagePatientTable.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Pls select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            Patient patient = (Patient) ManagePatientTable.getValueAt(selectedRowIndex, 9);

            for (Patient p : ecoSystem.getPatientDirect().getPatientList()) {
                if (patient.getpUserName().equals(p.getpUserName())) {
                    if (!((String) bloodRequestStatusDropDown.getSelectedItem()).equals("Select Status")) {
                        p.setpBloodBankStatus((String) bloodRequestStatusDropDown.getSelectedItem());
                        patientBill = p;
                        if (p.getpBloodBankStatus().equals("Blood Delivered")) {
                            for (int bloodBag = 0; bloodBag < Integer.parseInt(patientBill.getpBloodBagQuantity()); bloodBag++) {
                                ecoSystem.getPatientDirect().AddBill(patientBill, "Blood Charges", "Blood Bank", "");
                                ecoSystem.getBBank().AddTreatedPatientList(patientBill);
                            }
                        }
                        break;
                    }
                }
            }

            populateManagePatientTable();
            populateManagePatientBillsTable();

        }


    }//GEN-LAST:event_processReqBtnActionPerformed

    private void showTreatedPatListBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showTreatedPatListBtnActionPerformed
        // TODO add your handling code here:
        TreatedPatientJPanel treatedPatientJPanel = new TreatedPatientJPanel(userProCont,userAcc,ecoSystem);
        userProCont.add("Display Treated Patient", treatedPatientJPanel);
        CardLayout layout = (CardLayout) userProCont.getLayout();
        layout.next(userProCont);

    }//GEN-LAST:event_showTreatedPatListBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ManagePatientTable;
    private javax.swing.JButton bloodBankInfoBtn;
    private javax.swing.JComboBox<String> bloodRequestStatusDropDown;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblPatientBill;
    private javax.swing.JTable managePatientBillsTable;
    private javax.swing.JButton processReqBtn;
    private javax.swing.JButton showTreatedPatListBtn;
    // End of variables declaration//GEN-END:variables

}
