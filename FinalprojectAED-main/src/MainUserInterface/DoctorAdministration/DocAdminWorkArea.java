/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MainUserInterface.DoctorAdministration;

import BusinessModel.Doctor.Dr;
import BusinessModel.Ecosystem;
import BusinessModel.Patient.Patient;
import BusinessModel.UserAccount.User;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author daddy
 */
public class DocAdminWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form DocAdminWorkArea
     */
    private final JPanel userProCont;
    private final Ecosystem ecoSystem;
    User userAcc;

    public DocAdminWorkArea(JPanel userProcessContainer, User account, Ecosystem system) {
        initComponents();
        this.userProCont = userProcessContainer;
        this.ecoSystem = system;
        this.userAcc = account;
        populateTable();
        populatePatientTable();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) DoctorTable.getModel();

        model.setRowCount(0);

        for (Dr Doctor : ecoSystem.getDoctorDirect().getDoctors()) {

            Object[] row = new Object[9];
            row[0] = Doctor.getdocFirstName();
            row[1] = Doctor.getdocLastName();
            row[2] = Doctor.getdocWorkID();
            row[3] = Doctor.getdocExp();
            row[4] = Doctor.getdocAge();
            row[5] = Doctor.getdocGender();
            row[6] = Doctor.getdocEmail();
            row[7] = Doctor;
            model.addRow(row);

        }
    }

    private void populatePatientTable() {
        DefaultTableModel model = (DefaultTableModel) PatientTable.getModel();

        model.setRowCount(0);

        for (Patient patient : ecoSystem.getPatientDirect().getPatientList()) {

            Object[] row = new Object[8];
            row[0] = patient.getpFirstName();
            row[1] = patient.getpLastName();
            row[2] = patient.getpInjuryType();
            row[3] = patient.getpBloodType();
            row[4] = patient.getpAge();
            row[5] = patient.getpGender();
            row[6] = patient.getpEmailAddress();
            row[7] = patient;
            model.addRow(row);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblManageCustomers = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DoctorTable = new javax.swing.JTable();
        createDocBtn = new javax.swing.JButton();
        updateDocBtn = new javax.swing.JButton();
        deleteDocBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        PatientTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        assignDocBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 51, 51));
        setPreferredSize(new java.awt.Dimension(1227, 722));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblManageCustomers.setBackground(new java.awt.Color(255, 255, 255));
        lblManageCustomers.setFont(new java.awt.Font("Microsoft JhengHei", 1, 36)); // NOI18N
        lblManageCustomers.setForeground(new java.awt.Color(255, 255, 255));
        lblManageCustomers.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblManageCustomers.setText("Assign Patients to Doctors");
        add(lblManageCustomers, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, 720, -1));

        DoctorTable.setBackground(new java.awt.Color(204, 204, 255));
        DoctorTable.getTableHeader().setFont(new java.awt.Font("Trebuchet MS", 1, 16));
        DoctorTable.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        DoctorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "Health ID", "Experience", "Age", "Gender", "Email", "obj"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(DoctorTable);
        if (DoctorTable.getColumnModel().getColumnCount() > 0) {
            DoctorTable.getColumnModel().getColumn(7).setMinWidth(0);
            DoctorTable.getColumnModel().getColumn(7).setPreferredWidth(0);
            DoctorTable.getColumnModel().getColumn(7).setMaxWidth(0);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 490, 850, 191));

        createDocBtn.setBackground(new java.awt.Color(255, 153, 0));
        createDocBtn.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        createDocBtn.setForeground(new java.awt.Color(255, 255, 255));
        createDocBtn.setText("Create Doctor");
        createDocBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createDocBtnActionPerformed(evt);
            }
        });
        add(createDocBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 690, 160, 30));

        updateDocBtn.setBackground(new java.awt.Color(0, 0, 255));
        updateDocBtn.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        updateDocBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateDocBtn.setText("Update");
        updateDocBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDocBtnActionPerformed(evt);
            }
        });
        add(updateDocBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 690, 110, 30));

        deleteDocBtn.setBackground(new java.awt.Color(255, 0, 0));
        deleteDocBtn.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        deleteDocBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteDocBtn.setText("Delete");
        deleteDocBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDocBtnActionPerformed(evt);
            }
        });
        add(deleteDocBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 690, 100, 30));

        PatientTable.setBackground(new java.awt.Color(204, 204, 255));
        PatientTable.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        PatientTable.getTableHeader().setFont(new java.awt.Font("Trebuchet MS", 1, 16));
        PatientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "Injury", "Blood Type", "Age", "Gender", "Email", "obj"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(PatientTable);
        if (PatientTable.getColumnModel().getColumnCount() > 0) {
            PatientTable.getColumnModel().getColumn(7).setMinWidth(0);
            PatientTable.getColumnModel().getColumn(7).setPreferredWidth(0);
            PatientTable.getColumnModel().getColumn(7).setMaxWidth(0);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, 850, 193));

        jLabel1.setBackground(new java.awt.Color(0, 153, 204));
        jLabel1.setFont(new java.awt.Font("Microsoft JhengHei", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Patients");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 150, 160, 40));

        assignDocBtn.setBackground(new java.awt.Color(0, 204, 0));
        assignDocBtn.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        assignDocBtn.setForeground(new java.awt.Color(255, 255, 255));
        assignDocBtn.setText("Assign Doctor");
        assignDocBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignDocBtnActionPerformed(evt);
            }
        });
        add(assignDocBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 400, 160, 30));

        jLabel2.setFont(new java.awt.Font("Microsoft JhengHei", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Doctors");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 440, -1, 40));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainUserInterface/Images/doctor and patient22.gif"))); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, 210, 170));
    }// </editor-fold>//GEN-END:initComponents

    private void createDocBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createDocBtnActionPerformed
        // TODO add your handling code here:
        CreateDoc createDoctor = new CreateDoc(userProCont, userAcc, ecoSystem);
        userProCont.add("Add Doctor", createDoctor);
        CardLayout layout = (CardLayout) userProCont.getLayout();
        layout.next(userProCont);
    }//GEN-LAST:event_createDocBtnActionPerformed

    private void updateDocBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDocBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = DoctorTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            Dr d = (Dr) DoctorTable.getValueAt(selectedRow, 7);
            DocUpdate updateDoc = new DocUpdate(userProCont, userAcc, ecoSystem, d);
            userProCont.add("Update Doctor", updateDoc);
            CardLayout layout = (CardLayout) userProCont.getLayout();
            layout.next(userProCont);
        }

    }//GEN-LAST:event_updateDocBtnActionPerformed

    private void deleteDocBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDocBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = DoctorTable.getSelectedRow();
        if (selectedRow >= 0) {
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Delete Doctor: " + DoctorTable.getValueAt(selectedRow, 7) + " ??", "Warning", selectionButton);
            if (selectionResult == JOptionPane.YES_OPTION) {

                Dr p = (Dr) DoctorTable.getValueAt(selectedRow, 7);

                ecoSystem.getDoctorDirect().deleteDoc(p);
                populateTable();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please Select a Patient");
        }
    }//GEN-LAST:event_deleteDocBtnActionPerformed

    private void assignDocBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignDocBtnActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = PatientTable.getSelectedRow();
        if (selectedRowIndex < 0) 
        {
            JOptionPane.showMessageDialog(null, "Please select a row from the table to view details", "Warning", JOptionPane.WARNING_MESSAGE);
        } 
        else 
        {
            Patient patient = (Patient) PatientTable.getValueAt(selectedRowIndex, 7);
            DisplayPatientInformation displayPatientInfoJPanel = new DisplayPatientInformation(userProCont, userAcc, ecoSystem, patient);
            userProCont.add("Display Patient", displayPatientInfoJPanel);
            CardLayout layout = (CardLayout) userProCont.getLayout();
            layout.next(userProCont);
        }
    }//GEN-LAST:event_assignDocBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DoctorTable;
    private javax.swing.JTable PatientTable;
    private javax.swing.JButton assignDocBtn;
    private javax.swing.JButton createDocBtn;
    private javax.swing.JButton deleteDocBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblManageCustomers;
    private javax.swing.JButton updateDocBtn;
    // End of variables declaration//GEN-END:variables
}
