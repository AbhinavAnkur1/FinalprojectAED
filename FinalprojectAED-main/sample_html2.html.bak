<!DOCTYPE html>
<html>
<head>
	<!--<title>Geocoding Service</title> -->
	<meta name="viewport" content="initial-scale=1.0, user-scalable=no">
	<meta charset="utf-8">
	<style>
    /* 
	 * Always set the map height explicitly to define the size of the div element
	 * that contains the map. 
	 */
	#map {
	  height: 100%;
	}

	/* 
	 * Optional: Makes the sample page fill the window. 
	 */
	html,
	body {
	  height: 100%;
	  margin: 0;
	  padding: 0;
	}

	#floating-panel {
	  position: absolute;
	  top: 10px;
	  left: 25%;
	  z-index: 5;
	  background-color: #fff;
	  padding: 5px;
	  border: 1px solid #999;
	  text-align: center;
	  font-family: "Roboto", "sans-serif";
	  line-height: 30px;
	  padding-left: 10px;
	}

	#warnings-panel {
	  width: 100%;
	  height: 10%;
	  text-align: center;
	}
  </style>
</head>
<body>
    <div id="floating-panel">
      <b>Locations: </b>
	  <input id="start" type="textbox" value="Northeastern University, Boston">
	  <b></b>
      <input id="submit" type="button" value="Get Route">
    </div>
    <div id="map"></div>
    &nbsp;
    <div id="warnings-panel"></div>

    <!-- 
     The `defer` attribute causes the callback to execute after the full HTML
     document has been parsed. For non-blocking uses, avoiding race conditions,
     and consistent behavior across browsers, consider loading using Promises
     with https://www.npmjs.com/package/@googlemaps/js-api-loader.
    -->
	<script>
		function initMap() {
		  const markerArray = [];
		  // Instantiate a directions service.
		  const directionsService = new google.maps.DirectionsService();
		  // Create a map and center it on Boston.
		  const map = new google.maps.Map(document.getElementById("map"), {
			zoom: 13,
			center: { lat: 42.3601, lng: -71.0589 },
		  });
		  // Create a renderer for directions and bind it to the map.
		  const directionsRenderer = new google.maps.DirectionsRenderer({ map: map });
		  // Instantiate an info window to hold step text.
		  const stepDisplay = new google.maps.InfoWindow();

		  // Display the route between the initial start and end selections.
		  

		  document.getElementById('submit').addEventListener('click', function() {
			 const locations = document.getElementById('start').value;
			 markerArray = locations.split(';');
			 for(String s: markerArray){
				console.log('location ---'+s);
			 }
			 const image ="C:\Users\siddh\AED\Final-Project---AED\HospitalEcosystemManagement\src\MainUserInterface\Images\icons8-ambulance-50";
			 for (let i = 0; i < features.length; i++) {
				const marker = new google.maps.Marker({
				  position: features[i].position,
				  map: map,
				  icon : image
				});
			  }
		}

	window.initMap = initMap;
	</script>
    <script
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB41DRUbKWJHPxaFjMAwdrzWzbVKartNGg&callback=initMap&v=weekly"
      defer
    ></script>
  </body>
</html>




